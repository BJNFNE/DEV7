name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install g++
      run: choco install mingw -y

    - name: Compile C++
      run: g++ "${{ github.workspace }}/rewritten-modern-software/LoaderMDO/LoaderMDO/LoaderMDO.cpp" -o LoaderMDO.exe

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: compiled-binary
        path: LoaderMDO.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: compiled-binary
        path: .

    - name: Create Release
      id: create_release
      run: |
        RELEASE_TITLE="Release ${{ github.sha }}"
        RELEASE_BODY="This is an automatically generated release."

        # Create a new release
        RESPONSE=$(curl -s -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/releases" \
          -d "{\"tag_name\": \"${{ github.sha }}\",\"name\": \"${RELEASE_TITLE}\",\"body\": \"${RELEASE_BODY}\"}")

        # Extract the release ID from the response
        RELEASE_ID=$(echo "$RESPONSE" | jq -r '.id')

        # Upload the artifact to the release
        curl -s -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary "@LoaderMDO.exe" \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${RELEASE_ID}/assets?name=LoaderMDO.exe"
